plugins {
    id 'fabric-loom'
    id 'maven-publish'
}

version = rootProject.version
group = rootProject.maven_group
minecraft_version = rootProject.minecraft_version
loader_version = rootProject.loader_version
archivesBaseName = 'lignin-mockimpl'

repositories {
    maven { url = 'https://maven.parchmentmc.org' }
    maven { url "https://maven.terraformersmc.com/releases/" }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${rootProject.parchment_version}@zip")
    }
    implementation project(path: ':', configuration: 'namedElements')
    modImplementation "net.fabricmc:fabric-loader:${loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_version}"
    modCompileOnly("com.terraformersmc:modmenu:${rootProject.modmenu_version}") {
        exclude group: 'net.fabricmc.fabric-api'
    }
}

processResources {
    inputs.property "version", version
    inputs.property "minecraft_version", minecraft_version
    inputs.property "loader_version", loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": version,
                "minecraft_version": minecraft_version,
                "loader_version": loader_version
    }
}

tasks.register('prepareKotlinBuildScriptModel') {

}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {

    }
}
